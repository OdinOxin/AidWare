
package de.odinoxin.aidware.aidcloud.service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "RotaProvider", targetNamespace = "http://rota.plugins.aidcloud.odinoxin.de/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface RotaProvider {


    /**
     * 
     * @param id
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteRota", targetNamespace = "http://rota.plugins.aidcloud.odinoxin.de/", className = "DeleteRota")
    @ResponseWrapper(localName = "deleteRotaResponse", targetNamespace = "http://rota.plugins.aidcloud.odinoxin.de/", className = "DeleteRotaResponse")
    @Action(input = "http://rota.plugins.aidcloud.odinoxin.de/RotaProvider/deleteRotaRequest", output = "http://rota.plugins.aidcloud.odinoxin.de/RotaProvider/deleteRotaResponse")
    public boolean deleteRota(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param id
     * @return
     *     returns RotaEntity
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRota", targetNamespace = "http://rota.plugins.aidcloud.odinoxin.de/", className = "GetRota")
    @ResponseWrapper(localName = "getRotaResponse", targetNamespace = "http://rota.plugins.aidcloud.odinoxin.de/", className = "GetRotaResponse")
    @Action(input = "http://rota.plugins.aidcloud.odinoxin.de/RotaProvider/getRotaRequest", output = "http://rota.plugins.aidcloud.odinoxin.de/RotaProvider/getRotaResponse")
    public RotaEntity getRota(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param original
     * @param entity
     * @return
     *     returns RotaEntity
     * @throws ConcurrentFault_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "saveRota", targetNamespace = "http://rota.plugins.aidcloud.odinoxin.de/", className = "SaveRota")
    @ResponseWrapper(localName = "saveRotaResponse", targetNamespace = "http://rota.plugins.aidcloud.odinoxin.de/", className = "SaveRotaResponse")
    @Action(input = "http://rota.plugins.aidcloud.odinoxin.de/RotaProvider/saveRotaRequest", output = "http://rota.plugins.aidcloud.odinoxin.de/RotaProvider/saveRotaResponse", fault = {
        @FaultAction(className = ConcurrentFault_Exception.class, value = "http://rota.plugins.aidcloud.odinoxin.de/RotaProvider/saveRota/Fault/ConcurrentFault")
    })
    public RotaEntity saveRota(
        @WebParam(name = "entity", targetNamespace = "")
        RotaEntity entity,
        @WebParam(name = "original", targetNamespace = "")
        RotaEntity original)
        throws ConcurrentFault_Exception
    ;

    /**
     * 
     * @param exceptIds
     * @param max
     * @param expr
     * @return
     *     returns java.util.List<RotaEntity>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchRota", targetNamespace = "http://rota.plugins.aidcloud.odinoxin.de/", className = "SearchRota")
    @ResponseWrapper(localName = "searchRotaResponse", targetNamespace = "http://rota.plugins.aidcloud.odinoxin.de/", className = "SearchRotaResponse")
    @Action(input = "http://rota.plugins.aidcloud.odinoxin.de/RotaProvider/searchRotaRequest", output = "http://rota.plugins.aidcloud.odinoxin.de/RotaProvider/searchRotaResponse")
    public List<RotaEntity> searchRota(
        @WebParam(name = "expr", targetNamespace = "")
        List<String> expr,
        @WebParam(name = "max", targetNamespace = "")
        int max,
        @WebParam(name = "exceptIds", targetNamespace = "")
        List<Integer> exceptIds);

}
